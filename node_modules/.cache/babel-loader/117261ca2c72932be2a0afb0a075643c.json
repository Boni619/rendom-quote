{"ast":null,"code":"var _jsxFileName = \"/Users/boni/Desktop/rendom-quote/src/App.js\";\nimport React from \"react\";\nimport QuoteAndAuthor from \"./QuoteAndAuthor\";\nimport quotes from './QuotesDatabase';\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleClick = () => {\n      const generateRandomQuote = this.randomQuote();\n      this.setState({\n        quote: generateRandomQuote.quote,\n        author: generateRandomQuote.author\n      });\n      this.shuffleQuotes(quotes);\n    };\n\n    this.state = {\n      quote: quotes[0].quote,\n      author: quotes[0].author\n    };\n  }\n\n  randomQuote() {\n    const randomNumber = Math.floor(Math.random() * quotes.length);\n    return quotes[randomNumber];\n  }\n\n  shuffleQuotes(array) {\n    return array.sort(() => Math.random() - 0.5);\n  }\n\n  randomColor() {\n    const color = \"rgb(\\n      \".concat(Math.floor(Math.random() * 155), \",\\n      \").concat(Math.floor(Math.random() * 155), \",\\n      \").concat(Math.floor(Math.random() * 155), \")\");\n    return color;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(QuoteAndAuthor, Object.assign({\n      displayColor: this.randomColor,\n      handleClick: this.handleClick\n    }, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/boni/Desktop/rendom-quote/src/App.js"],"names":["React","QuoteAndAuthor","quotes","App","Component","constructor","handleClick","generateRandomQuote","randomQuote","setState","quote","author","shuffleQuotes","state","randomNumber","Math","floor","random","length","array","sort","randomColor","color","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAgBdC,WAhBc,GAgBA,MAAM;AAClB,YAAMC,mBAAmB,GAAG,KAAKC,WAAL,EAA5B;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEH,mBAAmB,CAACG,KADf;AAEZC,QAAAA,MAAM,EAAEJ,mBAAmB,CAACI;AAFhB,OAAd;AAIA,WAAKC,aAAL,CAAmBV,MAAnB;AACD,KAvBa;;AAEZ,SAAKW,KAAL,GAAa;AACXH,MAAAA,KAAK,EAAER,MAAM,CAAC,CAAD,CAAN,CAAUQ,KADN;AAEXC,MAAAA,MAAM,EAAET,MAAM,CAAC,CAAD,CAAN,CAAUS;AAFP,KAAb;AAID;;AACDH,EAAAA,WAAW,GAAG;AACZ,UAAMM,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBf,MAAM,CAACgB,MAAlC,CAArB;AACA,WAAOhB,MAAM,CAACY,YAAD,CAAb;AAED;;AACDF,EAAAA,aAAa,CAACO,KAAD,EAAO;AAClB,WAAOA,KAAK,CAACC,IAAN,CAAW,MAAIL,IAAI,CAACE,MAAL,KAAc,GAA7B,CAAP;AACD;;AAWDI,EAAAA,WAAW,GAAG;AACZ,UAAMC,KAAK,yBACPP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CADO,sBAEPF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAFO,sBAGPF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAHO,MAAX;AAIA,WAAOK,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,YAAY,EAAE,KAAKF,WADrB;AAEE,MAAA,WAAW,EAAE,KAAKf;AAFpB,OAGM,KAAKO,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AASD;;AA5C+B;;AA+ClC,eAAeV,GAAf","sourcesContent":["import React from \"react\";\nimport QuoteAndAuthor from \"./QuoteAndAuthor\";\nimport quotes from './QuotesDatabase'\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      quote: quotes[0].quote,\n      author: quotes[0].author,\n    };\n  }\n  randomQuote() {\n    const randomNumber = Math.floor(Math.random() * quotes.length);\n    return quotes[randomNumber];\n    \n  }\n  shuffleQuotes(array){\n    return array.sort(()=>Math.random()-0.5)\n  }\n\n  handleClick = () => {\n    const generateRandomQuote = this.randomQuote();\n    this.setState({\n      quote: generateRandomQuote.quote,\n      author: generateRandomQuote.author\n    });\n    this.shuffleQuotes(quotes)\n  };\n\n  randomColor() {\n    const color = `rgb(\n      ${Math.floor(Math.random() * 155)},\n      ${Math.floor(Math.random() * 155)},\n      ${Math.floor(Math.random() * 155)})`;\n    return color;\n  }\n  \n  render() {\n    return (\n      <div>\n        <QuoteAndAuthor\n          displayColor={this.randomColor}\n          handleClick={this.handleClick}\n          {...this.state}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}